workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

stages:
  - test
  - build
  - deploy
  - cleanup

## Review changes

review-pr:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  image: node:lts
  allow_failure: true
  script:
    - cd .gitlab/ci/danger
    - yarn
    - yarn danger ci
  artifacts:
    reports:
      dotenv: changes.env # List of modified challenges

## Build docker images

generate-build-pipeline:
  stage: build
  needs: []
  image: python:3-alpine
  before_script:
    - pip3 install pyyaml rich
  script:
    - python3 .gitlab/ci/generate-build-pipeline.py
  artifacts:
    paths:
      - build.gitlab-ci.yml # Downstream build pipeline

build-pipeline:
  stage: build
  needs:
    - generate-build-pipeline
  trigger:
    strategy: depend
    include:
      - job: generate-build-pipeline
        artifact: build.gitlab-ci.yml

# deploy-main:
#   stage: deploy
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   needs:
#     - job: build-pipeline
#   trigger:
#     project: breizh-ctf-2025/infra/pulumi
#     strategy: depend

install-challenges:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs: []
  image: python:3.12
  before_script:
    - pip3 install ctfcli
  script:
    - mkdir -p .ctf
    - cp $CTFCLI_CONFIG .ctf/config
    - python3 .gitlab/ci/sync_challenges.py

## Review app

# .review-app:
#   variables:
#     REVIEW_APP_PIPELINE: $CI_ENVIRONMENT_ACTION
#     REVIEW_APP_BRANCH: $CI_COMMIT_REF_SLUG
#     REVIEW_APP_DOMAIN: $CI_COMMIT_REF_SLUG.ctf.lan
#     REVIEW_CHALLENGES: $REVIEW_CHALLENGES
#   trigger:
#     project: breizh-ctf-2025/infra/pulumi
#     strategy: depend

# start-review-app:
#   extends: .review-app
#   stage: deploy
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#   needs:
#     - job: build-pipeline
#       artifacts: false
#     - job: review-pr
#       artifacts: true
#   environment:
#     name: review/$CI_COMMIT_REF_SLUG
#     url: http://$CI_COMMIT_REF_SLUG.ctf.lan
#     on_stop: stop-review-app

# install-challenges:
#   stage: deploy
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#   needs:
#     - job: start-review-app # Wait for CTFd to be deployed
#     - project: breizh-ctf-2025/infra/pulumi # Fetch $CTFD_TOKEN from downstream pipeline
#       ref: main
#       job: review-app-start-ctfd
#       artifacts: true
#     - job: review-pr # Fetch $REVIEW_CHALLENGES
#       artifacts: true
#   image: python:3.12
#   before_script:
#     - pip3 install ctfcli
#   script:
#     - mkdir -p .ctf
#     - |
#       cat << EOF > .ctf/config
#       [config]
#       url = http://$CI_COMMIT_REF_SLUG.ctf.lan
#       access_token = $CTFD_TOKEN

#       [challenges]
#       EOF
#     - |
#       for challenge in ${REVIEW_CHALLENGES}; do
#         ctf challenge install $challenge || ctf challenge sync $challenge
#       done || true

# stop-review-app:
#   extends: .review-app
#   stage: cleanup
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       when: manual
#   allow_failure: true
#   needs:
#     - job: review-pr
#       artifacts: true
#   environment:
#     name: review/$CI_COMMIT_REF_SLUG
#     url: http://$CI_COMMIT_REF_SLUG.ctf.lan
#     action: stop

